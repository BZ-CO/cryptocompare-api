steps:
- powershell: |
    $manifest = Get-Content .\package.json | Out-String | ConvertFrom-Json

    $canBePacked = '$(Build.SourceBranch)'.StartsWith("refs/tags/v") -and '$(Build.Reason)' -ne 'PullRequest' -and '$(System.PullRequest.IsFork)' -ne $true

    Write-Host 'Can be Packed'
    Write-Host $canBePacked

    Write-Host 'Source branch'
    Write-Host '$(Build.SourceBranch)'.StartsWith("refs/tags/v")

    Write-Host 'Reason'
    Write-Host '$(Build.Reason)' -ne 'PullRequest' 

    Write-Host 'Forked'
    Write-Host '$(System.PullRequest.IsFork)' -ne $true

    if ($canBePacked) { 
        $version = $manifest.version
    }else{
        $version = $manifest.version + '+' + $Env:BUILD_SOURCEVERSION.Substring(0, 6)
    }

    Write-Host "##vso[task.setvariable variable=canBePacked]$canBePacked"
    Write-Host "##vso[build.updatebuildnumber]$version"
  displayName: Set variables

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'
    arguments: '-c $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '-c $(BuildConfiguration) --no-build --no-restore'
    publishTestResults: true
    
- task: CopyFiles@2
  displayName: 'Copy binaries to artifacts directory'
  inputs:
    Contents: '**\bin\**'
    TargetFolder: '$(build.artifactstagingdirectory)\binaries'
    CleanTargetFolder: true
    OverWrite: true
    flattenFolders: true
  condition: and(succeeded(), eq(variables['canBePacked'], true))

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: pack
    packagesToPack: 'src/**/*.csproj'
    packDirectory: '$(build.artifactstagingdirectory)\packages'
    nobuild: true
    versioningScheme: byEnvVar
    versionEnvVar: 'BUILD_BUILDNUMBER'
  condition: and(succeeded(), eq(variables['canBePacked'], true))

- task: PublishBuildArtifacts@1
  displayName: 'Publish NuGet Artifacts'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)\packages'
    ArtifactName: Packages
  condition: and(succeeded(), eq(variables['canBePacked'], true))

- task: PublishBuildArtifacts@1
  displayName: 'Publish binaries'
  inputs:
    ArtifactName: Binaries
  condition: and(succeeded(), eq(variables['canBePacked'], true))
